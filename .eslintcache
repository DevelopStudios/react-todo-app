[{"/Users/charlroux/Desktop/internal/react-todo-app/src/index.js":"1","/Users/charlroux/Desktop/internal/react-todo-app/src/App.js":"2","/Users/charlroux/Desktop/internal/react-todo-app/src/reportWebVitals.js":"3","/Users/charlroux/Desktop/internal/react-todo-app/src/containers/TodoWrapper/TodoWrapper.js":"4","/Users/charlroux/Desktop/internal/react-todo-app/src/components/TaskForm/TaskForm.js":"5","/Users/charlroux/Desktop/internal/react-todo-app/src/components/EntryForm/EntryForm.js":"6"},{"size":500,"mtime":1612443356909,"results":"7","hashOfConfig":"8"},{"size":2243,"mtime":1612787065188,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1612443356909,"results":"10","hashOfConfig":"8"},{"size":6494,"mtime":1612787077743,"results":"11","hashOfConfig":"8"},{"size":3637,"mtime":1612525502474,"results":"12","hashOfConfig":"8"},{"size":2220,"mtime":1612786432962,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1krhzkp",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/Users/charlroux/Desktop/internal/react-todo-app/src/index.js",[],["28","29"],"/Users/charlroux/Desktop/internal/react-todo-app/src/App.js",["30"],"/Users/charlroux/Desktop/internal/react-todo-app/src/reportWebVitals.js",[],"/Users/charlroux/Desktop/internal/react-todo-app/src/containers/TodoWrapper/TodoWrapper.js",["31","32"],"/Users/charlroux/Desktop/internal/react-todo-app/src/components/TaskForm/TaskForm.js",["33"],"import TextField from \"@material-ui/core/TextField\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport './style.css';\nconst TaskForm = (props) => {\n  return (\n    <div className=\"TaskFormWrapper\">\n      <TextField\n          multiline\n          rowsMax={4}\n        id=\"task-form\"\n        variant=\"outlined\"\n        value={props.task.value}\n        className={props.task.done == true ? \"done\" : \"\"}\n        InputProps={{\n          startAdornment: (\n            <div className=\"svg-container\" onClick={props.toggleDone}>\n              {props.task.done === true ? (\n                <svg\n                  width=\"24\"\n                  height=\"24\"\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <circle cx=\"12\" cy=\"12\" r=\"12\" fill=\"url(#paint0_linear)\" />\n                  <path\n                    d=\"M8 12.3041L10.6959 15L16.6959 9\"\n                    stroke=\"white\"\n                    stroke-width=\"2\"\n                  />\n                  <defs>\n                    <linearGradient\n                      id=\"paint0_linear\"\n                      x1=\"-12\"\n                      y1=\"12\"\n                      x2=\"12\"\n                      y2=\"36\"\n                      gradientUnits=\"userSpaceOnUse\"\n                    >\n                      <stop stop-color=\"#55DDFF\" />\n                      <stop offset=\"1\" stop-color=\"#C058F3\" />\n                    </linearGradient>\n                  </defs>\n                </svg>\n              ) : (\n                <svg\n                  width=\"24\"\n                  height=\"24\"\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <circle cx=\"12\" cy=\"12\" r=\"11.5\" stroke=\"#393A4B\" />\n                  <g opacity=\"0.01\">\n                    <circle cx=\"12\" cy=\"12\" r=\"12\" fill=\"url(#paint0_linear)\" />\n                    <path d=\"M8 12.3041L10.6959 15L16.6959 9\" stroke=\"white\" />\n                  </g>\n                  <defs>\n                    <linearGradient\n                      id=\"paint0_linear\"\n                      x1=\"-12\"\n                      y1=\"12\"\n                      x2=\"12\"\n                      y2=\"36\"\n                      gradientUnits=\"userSpaceOnUse\"\n                    >\n                      <stop stop-color=\"#55DDFF\" />\n                      <stop offset=\"1\" stop-color=\"#C058F3\" />\n                    </linearGradient>\n                  </defs>\n                </svg>\n              )}\n            </div>\n          ),\n          endAdornment: (\n            <IconButton\n              onClick={props.removeTask}\n              color=\"primary\"\n              aria-label=\"clear task\"\n              component=\"span\"\n            >\n              <svg\n                width=\"18\"\n                height=\"18\"\n                viewBox=\"0 0 18 18\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <g id=\"Combined Shape 2\">\n                  <path\n                    id=\"Combined Shape\"\n                    fill-rule=\"evenodd\"\n                    clip-rule=\"evenodd\"\n                    d=\"M17.6777 0.707107L16.9706 0L8.83883 8.13173L0.707107 0L0 0.707107L8.13173 8.83883L0 16.9706L0.707106 17.6777L8.83883 9.54594L16.9706 17.6777L17.6777 16.9706L9.54594 8.83883L17.6777 0.707107Z\"\n                    fill=\"#494C6B\"\n                  />\n                </g>\n              </svg>\n            </IconButton>\n          ),\n        }}\n      />\n    </div>\n  );\n};\n\nexport default TaskForm;\n","/Users/charlroux/Desktop/internal/react-todo-app/src/components/EntryForm/EntryForm.js",[],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":47,"column":3,"nodeType":"40","endLine":47,"endColumn":12,"suggestions":"41"},{"ruleId":"42","severity":1,"message":"43","line":1,"column":27,"nodeType":"40","messageId":"44","endLine":1,"endColumn":36},{"ruleId":"42","severity":1,"message":"45","line":8,"column":9,"nodeType":"40","messageId":"44","endLine":8,"endColumn":20},{"ruleId":"46","severity":1,"message":"47","line":13,"column":36,"nodeType":"48","messageId":"49","endLine":13,"endColumn":38},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setModeState'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [mode] as a second argument to the useEffect Hook.","Identifier",["52"],"no-unused-vars","'useEffect' is defined but never used.","unusedVar","'taskAmmount' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"53","fix":"54"},"Add dependencies array: [mode]",{"range":"55","text":"56"},[1661,1661],", [mode]"]