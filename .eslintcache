[{"/Users/charl/Desktop/git/react-todo-app/src/reportWebVitals.js":"1","/Users/charl/Desktop/git/react-todo-app/src/index.tsx":"2","/Users/charl/Desktop/git/react-todo-app/src/App.tsx":"3","/Users/charl/Desktop/git/react-todo-app/src/Banner/Banner.tsx":"4","/Users/charl/Desktop/git/react-todo-app/src/Banner/TaskList/TaskList.tsx":"5","/Users/charl/Desktop/git/react-todo-app/src/common/FormEntry/FormEntry.tsx":"6"},{"size":362,"mtime":1610640371768,"results":"7","hashOfConfig":"8"},{"size":546,"mtime":1610995197843,"results":"9","hashOfConfig":"8"},{"size":878,"mtime":1611167652081,"results":"10","hashOfConfig":"8"},{"size":2049,"mtime":1610797325250,"results":"11","hashOfConfig":"8"},{"size":1881,"mtime":1611168037275,"results":"12","hashOfConfig":"8"},{"size":438,"mtime":1611167919344,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"5o3q7a",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"19"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/charl/Desktop/git/react-todo-app/src/reportWebVitals.js",[],["29","30"],"/Users/charl/Desktop/git/react-todo-app/src/index.tsx",[],["31","32"],"/Users/charl/Desktop/git/react-todo-app/src/App.tsx",["33"],"import { Component } from \"react\";\nimport \"./App.css\";\nimport Banner from \"./Banner/Banner\";\nimport TaskList from \"./Banner/TaskList/TaskList\";\nclass App extends Component {\n  state = {\n    mode: \"day\",\n    tasks: [{ value: \"test\", done: false }],\n  };\n\n  toggleDayNight = () => {\n    if (this.state.mode === \"day\") {\n      this.setState({ mode: \"night\" });\n    } else {\n      this.setState({ mode: \"day\" });\n    }\n  };\n\n  updateTasks = (newTasks: Array<{ value: \"test\"; done: false }>) => {\n    this.setState((this.state.tasks = newTasks));\n  };\n  render() {\n    return (\n      <div className=\"app-container\">\n        <Banner clickHandler={this.toggleDayNight} day={this.state.mode} />\n        <TaskList\n          mode={this.state.mode}\n          tasks={this.state.tasks}\n          update={this.updateTasks}\n        ></TaskList>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n","/Users/charl/Desktop/git/react-todo-app/src/Banner/Banner.tsx",[],"/Users/charl/Desktop/git/react-todo-app/src/Banner/TaskList/TaskList.tsx",[],"/Users/charl/Desktop/git/react-todo-app/src/common/FormEntry/FormEntry.tsx",[],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":20,"column":20,"nodeType":"40","endLine":20,"endColumn":30},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-global-assign","no-unsafe-negation"]